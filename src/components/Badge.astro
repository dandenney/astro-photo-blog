---
interface Props {
  variant?: "default" | "secondary" | "destructive" | "outline"
  class?: string
  href?: string
}

const { 
  variant = "default",
  class: className,
  href,
  ...rest
} = Astro.props;
---

<div
  class:list={[
    "inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2",
    // Variant styles
    variant === "default" && "border-transparent bg-primary text-primary-foreground hover:bg-primary/80",
    variant === "secondary" && "border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80",
    variant === "destructive" && "border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80",
    variant === "outline" && "text-foreground",
    className
  ]}
  {...rest}
>
  {
    href ? (
      <a 
        href={href} 
        class="hover:no-underline"
      >
        <slot />
      </a>
    ) : (
      <span>
        <slot />
      </span>
    )
  }
</div> 